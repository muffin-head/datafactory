{
	"name": "CashcenterDWH",
	"properties": {
		"folder": {
			"name": "DWH"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "linkedService4",
						"type": "LinkedServiceReference"
					},
					"name": "RegionHash"
				},
				{
					"linkedService": {
						"referenceName": "linkedService4",
						"type": "LinkedServiceReference"
					},
					"name": "cashCentertypeHash"
				},
				{
					"linkedService": {
						"referenceName": "AzureDataLakeStorage2",
						"type": "LinkedServiceReference"
					},
					"name": "cashcenter"
				},
				{
					"linkedService": {
						"referenceName": "linkedService4",
						"type": "LinkedServiceReference"
					},
					"name": "sourcecashCenterhashStaging"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "linkedService4",
						"type": "LinkedServiceReference"
					},
					"name": "DWHCashcenterUpdate"
				},
				{
					"linkedService": {
						"referenceName": "linkedService4",
						"type": "LinkedServiceReference"
					},
					"name": "DWHCashcenterInsert"
				}
			],
			"transformations": [
				{
					"name": "existsCashcenterID"
				},
				{
					"name": "Update"
				},
				{
					"name": "Insert"
				},
				{
					"name": "NotexistsCashcenterID"
				},
				{
					"name": "ValidateRegion"
				},
				{
					"name": "exists1"
				}
			],
			"scriptLines": [
				"parameters{",
				"     region as string,",
				"     cashcentertype as string,",
				"     cashcenter as string,",
				"     existCashcentertype as string,",
				"     existRegion as string,",
				"     existcashcenterID as string",
				"}",
				"source(output(",
				"          RegionID as integer,",
				"          RegionCode as string,",
				"          RegionDescription as string,",
				"          CreatedBy as string,",
				"          CreatedOn as timestamp,",
				"          UpdatedBy as string,",
				"          UpdatedOn as timestamp,",
				"          DeletedBy as string,",
				"          DeletedOn as timestamp,",
				"          RowLockVersion as string,",
				"          sha as string,",
				"          IsActive as boolean",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table',",
				"     store: 'sqlserver',",
				"     schemaName: 'dbo',",
				"     tableName: (concat('gold/', $region)),",
				"     isolationLevel: 'READ_UNCOMMITTED') ~> RegionHash",
				"source(output(",
				"          CashCentreTypeID as integer,",
				"          CashCentreTypeCode as string,",
				"          CashCentreTypeDescription as string,",
				"          CreatedBy as string,",
				"          CreatedOn as timestamp,",
				"          UpdatedBy as string,",
				"          UpdatedOn as timestamp,",
				"          DeletedBy as string,",
				"          DeletedOn as timestamp,",
				"          RowLockVersion as string,",
				"          sha as string,",
				"          IsActive as boolean",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table',",
				"     store: 'sqlserver',",
				"     schemaName: 'dbo',",
				"     tableName: (concat('gold/', $cashcentertype)),",
				"     isolationLevel: 'READ_UNCOMMITTED') ~> cashCentertypeHash",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet',",
				"     fileSystem: 'dynamicdata',",
				"     wildcardPaths:[($cashcenter)]) ~> cashcenter",
				"source(output(",
				"          CashCentreID as integer,",
				"          {  CashCentreTypeID} as short,",
				"          { RegionID} as short,",
				"          CashCentreCode as integer,",
				"          CashCentreDescription as string,",
				"          RowLockVersion as short,",
				"          IsActive as boolean,",
				"          CashCentreTypeID as short,",
				"          CashCentreTypeCode as integer,",
				"          CashCentreTypeDescription as string,",
				"          sha as string,",
				"          RegionID as short,",
				"          RegionCode as short,",
				"          RegionDescription as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table',",
				"     store: 'sqlserver',",
				"     schemaName: 'dbo',",
				"     tableName: 'DWH_cashcenter',",
				"     isolationLevel: 'READ_UNCOMMITTED') ~> sourcecashCenterhashStaging",
				"ValidateRegion, sourcecashCenterhashStaging exists(toString(byName($existcashcenterID)) == toString(byName($existcashcenterID)),",
				"     negate:false,",
				"     broadcast: 'auto')~> existsCashcenterID",
				"existsCashcenterID alterRow(updateIf(true())) ~> Update",
				"NotexistsCashcenterID alterRow(insertIf(true())) ~> Insert",
				"ValidateRegion, sourcecashCenterhashStaging exists(toString(byName($existcashcenterID)) == toString(byName($existcashcenterID)),",
				"     negate:true,",
				"     broadcast: 'auto')~> NotexistsCashcenterID",
				"exists1, RegionHash exists(toString(byName('RegionID','cashcenter')) == toString(byName('RegionID','RegionHash')),",
				"     negate:false,",
				"     broadcast: 'auto')~> ValidateRegion",
				"cashcenter, cashCentertypeHash exists(toString(byName('CashCentreTypeID','cashcenter')) == toString(byName('CashCentreTypeID','cashCentertypeHash')),",
				"     negate:false,",
				"     broadcast: 'auto')~> exists1",
				"Update sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table',",
				"     store: 'sqlserver',",
				"     schemaName: 'dbo',",
				"     tableName: 'DWH_cashcenter',",
				"     insertable: false,",
				"     updateable: true,",
				"     deletable: false,",
				"     upsertable: false,",
				"     keys:['CashCentreID'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> DWHCashcenterUpdate",
				"Insert sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table',",
				"     store: 'sqlserver',",
				"     schemaName: 'dbo',",
				"     tableName: 'DWH_cashcenter',",
				"     insertable: true,",
				"     updateable: false,",
				"     deletable: false,",
				"     upsertable: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> DWHCashcenterInsert"
			]
		}
	}
}