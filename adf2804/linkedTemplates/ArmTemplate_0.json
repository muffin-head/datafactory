{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf2804"
		},
		"AzureDataLakeStorage1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage1'"
		},
		"linkedService3_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'linkedService3'"
		},
		"sqldata_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'sqldata'"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://datalake2804.dfs.core.windows.net"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage1_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/linkedService3')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('linkedService3_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sqldata')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('sqldata_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqldata",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sqldata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "sch.csv",
						"fileSystem": "data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "File header ID",
						"type": "String"
					},
					{
						"name": "file header description",
						"type": "String"
					},
					{
						"name": "Start date",
						"type": "String"
					},
					{
						"name": "End Date ",
						"type": "String"
					},
					{
						"name": "File item name ",
						"type": "String"
					},
					{
						"name": "Rows loaded",
						"type": "String"
					},
					{
						"name": "Rows rejected error",
						"type": "String"
					},
					{
						"name": "Status",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "anc.csv",
						"fileSystem": "newdata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Excel1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "dynamicdata"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "EmployeeID",
						"type": "String"
					},
					{
						"name": "CashCentreID",
						"type": "String"
					},
					{
						"name": "CashCentreShiftID",
						"type": "String"
					},
					{
						"name": "CashCentreTeamID",
						"type": "String"
					},
					{
						"name": "PayRollNumber",
						"type": "String"
					},
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "DisplayName",
						"type": "String"
					},
					{
						"name": "CreatedBy",
						"type": "String"
					},
					{
						"name": "CreatedOn",
						"type": "String"
					},
					{
						"name": "UpdatedBy",
						"type": "String"
					},
					{
						"name": "DeletedBy",
						"type": "String"
					},
					{
						"name": "RowLockVersion",
						"type": "String"
					},
					{
						"name": "IsActive",
						"type": "String"
					},
					{
						"name": "Mobilenumber",
						"type": "String"
					},
					{
						"name": "Address ",
						"type": "String"
					},
					{
						"name": "start date",
						"type": "String"
					},
					{
						"name": "end date",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Excel4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linkedService3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "dynamicdata"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "EmployeeID",
						"type": "String"
					},
					{
						"name": "CashCentreID",
						"type": "String"
					},
					{
						"name": "CashCentreShiftID",
						"type": "String"
					},
					{
						"name": "CashCentreTeamID",
						"type": "String"
					},
					{
						"name": "PayRollNumber",
						"type": "String"
					},
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "DisplayName",
						"type": "String"
					},
					{
						"name": "CreatedBy",
						"type": "String"
					},
					{
						"name": "CreatedOn",
						"type": "String"
					},
					{
						"name": "UpdatedBy",
						"type": "String"
					},
					{
						"name": "DeletedBy",
						"type": "String"
					},
					{
						"name": "RowLockVersion",
						"type": "String"
					},
					{
						"name": "IsActive",
						"type": "String"
					},
					{
						"name": "Mobilenumber",
						"type": "String"
					},
					{
						"name": "Address ",
						"type": "String"
					},
					{
						"name": "joined date",
						"type": "String"
					},
					{
						"name": "end date",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linkedService3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Excel5')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "linkedService3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@item().name",
							"type": "Expression"
						},
						"container": "dynamicdata"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "CashCentreID",
						"type": "String"
					},
					{
						"name": "  CashCentreTypeID",
						"type": "String"
					},
					{
						"name": " RegionID",
						"type": "String"
					},
					{
						"name": "CashCentreCode",
						"type": "String"
					},
					{
						"name": "CashCentreDescription",
						"type": "String"
					},
					{
						"name": "RowLockVersion",
						"type": "String"
					},
					{
						"name": "IsActive",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/linkedService3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cashcenter_and_type_region')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "data"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "EmployeeID",
						"type": "String"
					},
					{
						"name": "CashCentreID",
						"type": "String"
					},
					{
						"name": "CashCentreShiftID",
						"type": "String"
					},
					{
						"name": "CashCentreTeamID",
						"type": "String"
					},
					{
						"name": "PayRollNumber",
						"type": "String"
					},
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "DisplayName",
						"type": "String"
					},
					{
						"name": "CreatedBy",
						"type": "String"
					},
					{
						"name": "CreatedOn",
						"type": "String"
					},
					{
						"name": "UpdatedBy",
						"type": "String"
					},
					{
						"name": "DeletedBy",
						"type": "String"
					},
					{
						"name": "RowLockVersion",
						"type": "String"
					},
					{
						"name": "IsActive",
						"type": "String"
					},
					{
						"name": "Mobilenumber",
						"type": "String"
					},
					{
						"name": "Address ",
						"type": "String"
					},
					{
						"name": "start date",
						"type": "String"
					},
					{
						"name": "end date",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "AzureDataLakeStorage1",
								"type": "LinkedServiceReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "AzureDataLakeStorage1",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          {File header ID} as short,",
						"          {file header description} as string,",
						"          {Start date} as string,",
						"          {End Date } as string,",
						"          {File item name } as string,",
						"          {Rows loaded} as short,",
						"          {Rows rejected error} as boolean,",
						"          Status as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'delimited',",
						"     fileSystem: 'newdata',",
						"     fileName: 'anc.csv',",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: true) ~> source1",
						"source1 select(mapColumn(",
						"          {File header ID},",
						"          {file header description},",
						"          {Start date},",
						"          {End Date },",
						"          {Rows loaded},",
						"          {Rows rejected error},",
						"          Status",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'delimited',",
						"     fileSystem: 'newdata',",
						"     folderPath: 'selectdata',",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: false,",
						"     umask: 0777,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dynamicDataDuplidaceDWH')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "DWH"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "sqldata",
								"type": "LinkedServiceReference"
							},
							"name": "SilverPIPELINE"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "sqldata",
								"type": "LinkedServiceReference"
							},
							"name": "GoldLineage"
						}
					],
					"transformations": [
						{
							"name": "REMOVEDUP"
						}
					],
					"scriptLines": [
						"parameters{",
						"     parameter1 as string",
						"}",
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'sqlserver',",
						"     schemaName: 'dbo',",
						"     tableName: (concat('silver/',$parameter1)),",
						"     isolationLevel: 'READ_UNCOMMITTED') ~> SilverPIPELINE",
						"SilverPIPELINE aggregate(groupBy(hash = sha2(256,columns())),",
						"     each(match(true()), $$ = first($$))) ~> REMOVEDUP",
						"REMOVEDUP sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'sqlserver',",
						"     schemaName: 'dbo',",
						"     tableName: (concat('gold/', $parameter1)),",
						"     insertable: true,",
						"     updateable: false,",
						"     deletable: false,",
						"     upsertable: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> GoldLineage"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/sqldata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dynamic data_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Excel1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "If Condition1_copy1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@startswith(string(activity('Get Metadata1').output.name[0]),'cashcenter01.xlsx' )",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Fail1_copy1",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": {
											"value": "@item.name",
											"type": "Expression"
										},
										"errorCode": " @item.name"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"sourcename": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Excel1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DelimitedText1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-04-30T09:37:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText2')]",
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "cashcenter_and_type_region",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "sqldata",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						},
						{
							"name": "union1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     file as string",
						"}",
						"source(output(",
						"          EmployeeID as string,",
						"          CashCentreID as string,",
						"          CashCentreShiftID as string,",
						"          CashCentreTeamID as string,",
						"          PayRollNumber as string,",
						"          FirstName as string,",
						"          LastName as string,",
						"          DisplayName as string,",
						"          CreatedBy as string,",
						"          CreatedOn as string,",
						"          UpdatedBy as string,",
						"          DeletedBy as string,",
						"          RowLockVersion as string,",
						"          IsActive as string,",
						"          Mobilenumber as string,",
						"          {Address } as string,",
						"          {start date} as string,",
						"          {end date} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     wildcardPaths:[($file)]) ~> source1",
						"source1 derive(validate = true()) ~> derivedColumn1",
						"source1, derivedColumn1 union(byName: true)~> union1",
						"union1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'sqlserver',",
						"     schemaName: 'schema',",
						"     tableName: ($file),",
						"     insertable: true,",
						"     updateable: false,",
						"     deletable: false,",
						"     upsertable: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/cashcenter_and_type_region')]",
				"[concat(variables('factoryId'), '/linkedServices/sqldata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dynamicColumnDWH')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "DWH"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Excel1",
								"type": "DatasetReference"
							},
							"name": "LocalStaging"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "sqldata",
								"type": "LinkedServiceReference"
							},
							"name": "SilverLineage"
						}
					],
					"transformations": [
						{
							"name": "DUMMYvalidate"
						},
						{
							"name": "RegexSTR"
						},
						{
							"name": "RegexNum"
						}
					],
					"scriptLines": [
						"parameters{",
						"     parameter1 as string,",
						"     parameter2 as string",
						"}",
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     wildcardPaths:[($parameter1)]) ~> LocalStaging",
						"LocalStaging derive(validate = true()) ~> DUMMYvalidate",
						"DUMMYvalidate derive(each(match(type=='string'&&name!='pass'), $$ = regexReplace($$, '[!@#$%^&*()]',''))) ~> RegexSTR",
						"RegexSTR derive(each(match(type=='short'), $$ = regexReplace($$, '[!@#$%^&*a-zA-Z]',''))) ~> RegexNum",
						"RegexNum sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'sqlserver',",
						"     schemaName: 'dbo',",
						"     tableName: (concat('silver/',$parameter2)),",
						"     insertable: true,",
						"     updateable: false,",
						"     deletable: false,",
						"     upsertable: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> SilverLineage"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Excel1')]",
				"[concat(variables('factoryId'), '/linkedServices/sqldata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DWH_V1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ReadInputFileDynamically",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Excel4",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "ForEachDATA",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "ReadInputFileDynamically",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('ReadInputFileDynamically').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(string(item().name),string(pipeline().parameters.file))",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Fail1",
												"type": "Fail",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"message": "401",
													"errorCode": "404"
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "InitialCopyDataflow_copy1",
												"type": "ExecuteDataFlow",
												"dependsOn": [
													{
														"activity": "Lookup1",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "1.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataflow": {
														"referenceName": "dynamicColumnDWH",
														"type": "DataFlowReference",
														"parameters": {
															"parameter1": {
																"value": "'@{item().name}'",
																"type": "Expression"
															},
															"parameter2": {
																"value": "'@{item().name}'",
																"type": "Expression"
															}
														},
														"datasetParameters": {
															"LocalStaging": {},
															"SilverLineage": {}
														}
													},
													"staging": {},
													"compute": {
														"coreCount": 8,
														"computeType": "General"
													},
													"traceLevel": "Fine"
												}
											},
											{
												"name": "Lookup1",
												"type": "Lookup",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "ExcelSource",
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true,
															"enablePartitionDiscovery": false
														}
													},
													"dataset": {
														"referenceName": "Excel5",
														"type": "DatasetReference",
														"parameters": {}
													},
													"firstRowOnly": false
												}
											},
											{
												"name": "removeDuplicateDWH",
												"type": "ExecuteDataFlow",
												"dependsOn": [
													{
														"activity": "InitialCopyDataflow_copy1",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "1.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataflow": {
														"referenceName": "dynamicDataDuplidaceDWH",
														"type": "DataFlowReference",
														"parameters": {
															"parameter1": {
																"value": "'@{item().name}'",
																"type": "Expression"
															}
														},
														"datasetParameters": {
															"SilverPIPELINE": {},
															"GoldLineage": {}
														}
													},
													"staging": {},
													"compute": {
														"coreCount": 8,
														"computeType": "General"
													},
													"traceLevel": "Fine"
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"file": {
						"type": "string"
					}
				},
				"folder": {
					"name": "DWH"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Excel4')]",
				"[concat(variables('factoryId'), '/dataflows/dynamicColumnDWH')]",
				"[concat(variables('factoryId'), '/datasets/Excel5')]",
				"[concat(variables('factoryId'), '/dataflows/dynamicDataDuplidaceDWH')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dynamic data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Excel1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@startswith(toLower(string(item().name)),'cashcenter01.xlsx' )",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Fail1",
												"type": "Fail",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"message": {
														"value": "@item.name",
														"type": "Expression"
													},
													"errorCode": " @item.name"
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Data flow1",
												"type": "ExecuteDataFlow",
												"dependsOn": [],
												"policy": {
													"timeout": "1.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"dataflow": {
														"referenceName": "dataflow2",
														"type": "DataFlowReference",
														"parameters": {
															"file": {
																"value": "'@{item().name}'",
																"type": "Expression"
															}
														},
														"datasetParameters": {
															"source1": {},
															"sink1": {}
														}
													},
													"staging": {},
													"compute": {
														"coreCount": 8,
														"computeType": "General"
													},
													"traceLevel": "Fine"
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "If Condition1_copy1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@startswith(string(activity('Get Metadata1').output.name[0]),'cashcenter01.xlsx' )",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Fail1_copy1",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": {
											"value": "@item.name",
											"type": "Expression"
										},
										"errorCode": " @item.name"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"sourcename": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Excel1')]",
				"[concat(variables('factoryId'), '/dataflows/dataflow2')]"
			]
		}
	]
}